ioremap analysis

in my LED driver there is a line

  pREG = ioremap(0x56000050, 0x20);

while in 2410UM, we see the physical adress of GPFCON is 0x56000050

so we can safely conclude that 

**************************************
*  the argument of ioremap is physical adress
*  and the rusult is (a pointer) virtual adress
***************************************

and 

the physical adress of GPFDAT is 0x56000054

see how i manipulate GPFDAT in my led driver

 pREG = ioremap(0x56000050, 0x20);
 printk("Virtual addr base = 0x%lx\n", (unsigned long)pREG);
 * (volatile unsigned long *)pREG = 0x155555;
 * (volatile unsigned long *)(pREG + 1) = 0xf10;//led4=1, led7=0;

the above shows us if the physical adreesses are concequencial

the virtual ones are consequencial as well

but since that the usigned long type is casted to pREG so

pREG+1 rather than pREG+4 is right here

***************

now i would like to know how ioremap caculates. 

well, it seems not easy to do so by hacking in the kernel 

so i decide to do it a tricky way

i change my led driver a little and when i

#insmod led.ko 

i see

  0x56000050's Virtual addr is  = 0xc480c050

now i turn to 2410UM and find out 0x56000050 is the physical adress of

GPFCON

then i will try to find out the value S3C2410_GPFCON defined by kernel

**

linux/include/asm/hardware/s3c2410/regs-gpio.h

   #define S3C2410_GPFCON	   S3C2410_GPIOREG(0x50)

   #define S3C2410_GPIOREG(x) ((x) + S3C24XX_VA_GPIO)


/* linux/include/asm-arm/arch-s3c2410/map.h

#define S3C24XX_VA_GPIO	   S3C2410_ADDR(0x00E00000)

#define S3C2410_ADDR(x)	  (0xF0000000 + (x))


//so finally S3C2410_GPFCON=0xF0E00050

//it not equals ioremap(0x56000050), why? i do not understand about this?

so i think i need to write a  S3C2410_GPFCON version of LED driver to see

will  S3C2410_GPFCON works in the real world, if it does the same job, then

that means  virtual adress of one device is not unique

***********************
// see you in led_driver_GPFCON 
***********************